name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Custom version (optional)'
        required: false
        type: string

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    if: github.repository_owner == 'trustification'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.9.0'
          registry-url: 'https://npm.pkg.github.com'

      - name: Set NPM auth token
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Remove snapshot
        run: mvn -B versions:set -DremoveSnapshot -DgenerateBackupPoms=false

      - name: Build and Deploy
        run: mvn -B deploy -Ppublish -Prelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.event.inputs.version || steps.get_version.outputs.version }}
          tag_name: v${{ github.event.inputs.version || steps.get_version.outputs.version }}
          generate_release_notes: true
          sign: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version
        id: get_version
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Update to next version
        if: success()
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            mvn -B release:update-versions -DnewVersion=${{ github.event.inputs.version }}
          else
            mvn -B release:update-versions
          fi

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "build(release): update to next development version"
          git push 