name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Custom version (optional)'
        required: false
        type: string
      publish_npm:
        description: 'Publish to npm registry'
        required: false
        type: boolean
        default: true
      publish_maven:
        description: 'Publish to Maven Central'
        required: false
        type: boolean
        default: true

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    if: github.repository_owner == 'guacsec'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Java 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      
      - name: Import GPG key for Maven
        run: |
          mkdir -p ~/.gnupg
          echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Set version
        if: github.event.inputs.version != ''
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.version }} -DgenerateBackupPoms=false

      - name: Remove snapshot
        if: github.event.inputs.version == ''
        run: mvn -B versions:set -DremoveSnapshot -DgenerateBackupPoms=false


      - name: Build
        run: mvn -s .github/workflows/maven/settings.xml -B package

      - name: Publish to Maven Central
        if: ${{ !inputs.bump_only && inputs.publish_maven == 'true' }}
        run: mvn -s .github/workflows/maven/settings.xml -B deploy -Ppublish-maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}

      - name: Publish to npm
        if: ${{ !inputs.bump_only && inputs.publish_npm == 'true' }}
        run: mvn -s .github/workflows/maven/settings.xml -B deploy -Ppublish-npm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get version
        id: get_version
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.event.inputs.version || steps.get_version.outputs.version }}
          tag_name: v${{ github.event.inputs.version || steps.get_version.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update to next version
        if: success()
        run: |
          mvn -B release:update-versions
          # Run the phase that triggers README.md update
          mvn -B validate

      - name: Create Pull Request with next version
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "build(release): update to next development version"
          branch: chore/bump-version
          title: "chore: bump to next development version"
          signoff: true
          body: |
            This PR updates the project to the next development version after the release.
          token: ${{ secrets.GITHUB_TOKEN }}
