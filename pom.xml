<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.redhat.ecosystemappeng</groupId>
  <artifactId>exhort-api-spec</artifactId>
  <version>1.0.14-SNAPSHOT</version>
  <name>Exhort Java API</name>
  <description>Red Hat Trusted Profile Analizer :: Exhort :: Java API</description>
  <url>https://github.com/trustification/exhort-api-spec</url>
  <inceptionYear>2023</inceptionYear>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.release>11</maven.compiler.release>
    <js-api>${project.build.directory}/js-api</js-api>
    <maven.build.timestamp.format>yyyyMMdd.HHmmss</maven.build.timestamp.format>
    <timestamp>${maven.build.timestamp}</timestamp>
    <!-- Dependencies -->
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>3.5.0</quarkus.platform.version>
    <packageurl.version>1.5.0</packageurl.version>
    <!-- Plugins -->
    <maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>3.5.0</maven-dependency-plugin.version>
    <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
    <maven-enforcer-plugin.version>3.3.0</maven-enforcer-plugin.version>
    <maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
    <maven-help-plugin.version>3.4.0</maven-help-plugin.version>
    <maven-install-plugin.version>3.1.1</maven-install-plugin.version>
    <maven-invoker-plugin.version>3.2.2</maven-invoker-plugin.version>
    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>3.4.1</maven-javadoc-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>
    <build-helper-maven-plugin.version>3.4.0</build-helper-maven-plugin.version>
    <extra-enforcer-rules.version>1.6.2</extra-enforcer-rules.version>
    <flatten-maven-plugin.version>1.4.1</flatten-maven-plugin.version>
    <license-maven-plugin.version>4.1</license-maven-plugin.version>
    <openapi-generator-maven-plugin.version>7.0.1</openapi-generator-maven-plugin.version>
    <versions-maven-plugin.version>2.15.0</versions-maven-plugin.version>
    <frontend-maven-plugin.version>1.13.4</frontend-maven-plugin.version>
    <!-- Node and Yarn -->
    <node.version>v20.9.0</node.version>
    <yarn.version>v1.22.19</yarn.version>
  </properties>

  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/trustification/exhort-api-spec/issues</url>
  </issueManagement>

  <scm>
    <url>https://github.com/trustification/exhort-api-spec</url>
    <connection>scm:git:git@github.com:trustification/exhort-api-spec.git</connection>
    <developerConnection>scm:git:git@github.com:trustification/exhort-api-spec.git</developerConnection>
    <tag>v1.0.0</tag>
  </scm>

  <ciManagement>
    <system>GitHub Workflows</system>
    <url>https://github.com/trustification/exhort-api-spec/actions</url>
  </ciManagement>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>Trustification Maven Packages</name>
      <url>https://maven.pkg.github.com/trustification/exhort-api-spec</url>
    </repository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.github.package-url</groupId>
        <artifactId>packageurl-java</artifactId>
        <version>${packageurl.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Dependencies -->
    <dependency>
      <groupId>com.github.package-url</groupId>
      <artifactId>packageurl-java</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Apache Plugins -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven-gpg-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-help-plugin</artifactId>
          <version>${maven-help-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-invoker-plugin</artifactId>
          <version>${maven-invoker-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <doclint>all,-missing</doclint>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
          <executions>
            <execution>
              <id>copy-js-resources</id>
              <phase>validate</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${js-api}</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/src/filtered/js-api</directory>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>copy-readme</id>
              <phase>validate</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${basedir}</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/src/filtered/base</directory>
                    <filtering>true</filtering>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <!-- Third-Party Plugins -->
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${license-maven-plugin.version}</version>
          <configuration>
            <properties>
              <owner>Red Hat, Inc. and/or its affiliates</owner>
            </properties>
            <licenseSets>
              <licenseSet>
                <excludes>
                  <exclude>**/module-info.java</exclude>
                  <exclude>**/package-info.java</exclude>
                  <exclude>**/module-info.test</exclude>
                  <exclude>src/test/resources/**</exclude>
                  <exclude>src/main/resources/**</exclude>
                  <exclude>src/it/**/test/resources/**</exclude>
                  <exclude>src/it/**/main/resources/**</exclude>
                </excludes>
                <includes>
                  <include>src/main/**</include>
                  <include>src/test/**</include>
                  <include>src/it/**/src/main/**</include>
                  <include>src/it/**/src/test/**</include>
                </includes>
                <!--suppress
                UnresolvedMavenProperty -->
                <inlineHeader><![CDATA[Copyright ${year} ${owner}
and other contributors as indicated by the @author tags.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

See the License for the specific language governing permissions and
limitations under the License.]]>
                </inlineHeader>
              </licenseSet>
            </licenseSets>
            <skipExistingHeaders>false</skipExistingHeaders>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
          <configuration>
            <flattenMode>ossrh</flattenMode>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>${openapi-generator-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${frontend-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <!-- help:active-profiles is bound to the validate phase and will print a list of active
      profiles. -->
      <plugin>
        <artifactId>maven-help-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>active-profiles</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- flatten-maven-plugin:clean is bound to the clean phase and will delete the
      .flattened-pom.xml file. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- enforcer:enforce is bound to the validate phase and will fail for the configured
      constraints. -->
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>${extra-enforcer-rules.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <rules>
            <dependencyConvergence />
            <requireJavaVersion>
              <version>[11,)</version>
            </requireJavaVersion>
            <requireMavenVersion>
              <version>[3.8,)</version>
            </requireMavenVersion>
            <banDuplicateClasses />
            <banCircularDependencies />
          </rules>
        </configuration>
      </plugin>

      <!-- license-maven-plugin:check is bound to the verify phase and will fail for unlicensed
      sources. -->
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- build-helper-maven-plugin:add-source is bound to the generate-sources phase and will
      include generated files as sources -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- openapi-generator-maven-plugin:generate is bound to the generate-sources phase and will
      generate sources from the api spec -->
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-v3</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/api/v3/openapi.yaml</inputSpec>
              <generatorName>java</generatorName>
              <modelPackage>com.redhat.exhort.api.v3</modelPackage>
              <output>${project.build.directory}</output>
              <configOptions>
                <documentationProvider>none</documentationProvider>
                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                <serializableModel>true</serializableModel>
                <serializationLibrary>jackson</serializationLibrary>
                <sourceFolder>generated-sources</sourceFolder>
                <useJakartaEe>true</useJakartaEe>
              </configOptions>
              <library>native</library>
              <generateApis>false</generateApis>
              <generateSupportingFiles>false</generateSupportingFiles>
              <generateModelTests>false</generateModelTests>
              <generateModelDocumentation>false</generateModelDocumentation>
              <generateApiTests>false</generateApiTests>
              <addCompileSourceRoot>false</addCompileSourceRoot>
              <addTestCompileSourceRoot>false</addTestCompileSourceRoot>
              <inlineSchemaNameMappings>analysis_200_response=AnalysisResponse</inlineSchemaNameMappings>
              <schemaMappings>PackageRef=com.redhat.exhort.api.PackageRef</schemaMappings>
            </configuration>
          </execution>
          <execution>
            <id>generate-v4</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/api/v4/openapi.yaml</inputSpec>
              <generatorName>java</generatorName>
              <modelPackage>com.redhat.exhort.api.v4</modelPackage>
              <output>${project.build.directory}</output>
              <configOptions>
                <documentationProvider>none</documentationProvider>
                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                <serializableModel>true</serializableModel>
                <serializationLibrary>jackson</serializationLibrary>
                <sourceFolder>generated-sources</sourceFolder>
                <useJakartaEe>true</useJakartaEe>
              </configOptions>
              <library>native</library>
              <generateApis>false</generateApis>
              <generateSupportingFiles>false</generateSupportingFiles>
              <generateModelTests>false</generateModelTests>
              <generateModelDocumentation>false</generateModelDocumentation>
              <generateApiTests>false</generateApiTests>
              <addCompileSourceRoot>false</addCompileSourceRoot>
              <addTestCompileSourceRoot>false</addTestCompileSourceRoot>
              <inlineSchemaNameMappings>analysis_200_response=AnalysisResponse</inlineSchemaNameMappings>
              <schemaMappings>PackageRef=com.redhat.exhort.api.PackageRef</schemaMappings>
            </configuration>
          </execution>
          <execution>
            <id>generate-js-v3</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/api/v3/openapi.yaml</inputSpec>
              <generatorName>typescript</generatorName>
              <modelPackage>v3</modelPackage>
              <output>${js-api}/model</output>
              <generateApis>false</generateApis>
              <generateSupportingFiles>false</generateSupportingFiles>
              <generateModelTests>false</generateModelTests>
              <generateModelDocumentation>false</generateModelDocumentation>
              <generateApiTests>false</generateApiTests>
              <addCompileSourceRoot>false</addCompileSourceRoot>
              <addTestCompileSourceRoot>false</addTestCompileSourceRoot>
              <inlineSchemaNameMappings>analysis_200_response=AnalysisResponse</inlineSchemaNameMappings>
              <configOptions>
                <useTypeScript>true</useTypeScript>
                <withInterfaces>true</withInterfaces>
                <withSeparateModelsAndApi>true</withSeparateModelsAndApi>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>generate-js-v4</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/api/v4/openapi.yaml</inputSpec>
              <generatorName>typescript</generatorName>
              <modelPackage>v4</modelPackage>
              <output>${js-api}/model</output>
              <generateApis>false</generateApis>
              <generateSupportingFiles>false</generateSupportingFiles>
              <generateModelTests>false</generateModelTests>
              <generateModelDocumentation>false</generateModelDocumentation>
              <generateApiTests>false</generateApiTests>
              <addCompileSourceRoot>false</addCompileSourceRoot>
              <addTestCompileSourceRoot>false</addTestCompileSourceRoot>
              <inlineSchemaNameMappings>analysis_200_response=AnalysisResponse</inlineSchemaNameMappings>
              <configOptions>
                <useTypeScript>true</useTypeScript>
                <withInterfaces>true</withInterfaces>
                <withSeparateModelsAndApi>true</withSeparateModelsAndApi>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>install node and yarn</id>
            <phase>initialize</phase>
            <goals>
              <goal>install-node-and-yarn</goal>
            </goals>
          </execution>
          <execution>
            <id>yarn install</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>fix-type-definitions</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>run fix-types</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn compile</id>
            <phase>compile</phase>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>run compile</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn publish</id>
            <phase>deploy</phase>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>run publish:snapshot</arguments>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <nodeVersion>${node.version}</nodeVersion>
          <yarnVersion>${yarn.version}</yarnVersion>
          <workingDirectory>${js-api}</workingDirectory>
          <installDirectory>target</installDirectory>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>publish</id>
      <build>
        <plugins>
<!-- flatten-maven-plugin:flatten is bound to the process-resources phase and will create
          a .flattened-pom.xml -->
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>flatten-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>flatten</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>flatten</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- source:jar is bound to the generate-sources phase and will create a sources jar -->
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <!-- javadoc:jar is bound to the generate-sources phase and will create a javadoc jar -->
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <gpgArguments>
                    <arg>--batch</arg>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install node and yarn</id>
                <phase>initialize</phase>
                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>
              </execution>
              <execution>
                <id>yarn install</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>install</arguments>
                </configuration>
              </execution>
              <execution>
                <id>fix-type-definitions</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>run fix-types</arguments>
                </configuration>
              </execution>
              <execution>
                <id>yarn compile</id>
                <phase>compile</phase>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>run compile</arguments>
                </configuration>
              </execution>
              <execution>
                <id>yarn publish</id>
                <phase>deploy</phase>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <configuration>
                  <arguments>publish</arguments>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <nodeVersion>${node.version}</nodeVersion>
              <yarnVersion>${yarn.version}</yarnVersion>
              <workingDirectory>${js-api}</workingDirectory>
              <installDirectory>target</installDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
